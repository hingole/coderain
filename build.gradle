// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        // the latest version of the android-apt plugin
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'io.fabric.tools:gradle:1.21.5'
    }
}

ext {
    androidTargetSdkVersion = 21
    androidMinSdkVersion = 18
    androidCompileSdkVersion = 21
    androidBuildToolsVersion = "21.1.2"
    libs = [
        appcompat: 'com.android.support:appcompat-v7:21.0.3',
        playServices: 'com.google.android.gms:play-services:7.0.0',
        otto: 'com.squareup:otto:1.3.6',
        dagger: 'com.squareup.dagger:dagger:1.2.2',
        daggerCompiler: 'com.squareup.dagger:dagger-compiler:1.2.2',
        googleCollections: 'com.google.collections:google-collections:1.0',
        butterknife: 'com.jakewharton:butterknife:6.1.0',
        calligraphy: 'uk.co.chrisjenx:calligraphy:2.0.2',
        supportAnnotations: 'com.android.support:support-annotations:21.0.3',
        crashlytics: 'com.crashlytics.sdk.android:crashlytics:2.2.3@aar',
        googleApiClientAndroid: 'com.google.api-client:google-api-client-android:1.17.0-rc',
        googleApiClientGson: 'com.google.api-client:google-api-client-gson:1.17.0-rc'
    ]
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}

task checkstyle(type: Checkstyle) {
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'

    def configProps = ['proj.module.dir': projectDir.absolutePath]
    configProperties configProps

    // empty classpath
    classpath = files()
}

project(":app") {
    apply plugin: 'com.android.application'
    apply plugin: 'com.neenbedankt.android-apt'
}

configure(subprojects.findAll {it.name != 'app'}) {
    apply plugin: 'com.android.library'
    apply plugin: 'com.neenbedankt.android-apt'
}

subprojects {
    dependencies {
        apt libs.daggerCompiler
    }
    android {
        compileSdkVersion androidCompileSdkVersion
        buildToolsVersion androidBuildToolsVersion
        publishNonDefault true

        defaultConfig {
            minSdkVersion androidMinSdkVersion
            targetSdkVersion androidTargetSdkVersion
        }
        buildTypes {
            def BOOLEAN = "boolean"
            def TRUE = "true"
            def FALSE = "false"
            def LOG_HTTP_REQUESTS = "LOG_HTTP_REQUESTS"
            def REPORT_CRASHES = "REPORT_CRASHES"
            def TRACING_ENABLED = "TRACING_ENABLED"
            def RESET_DB_ONSTART = "RESET_DB_ONSTART"

            release {
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                buildConfigField BOOLEAN, LOG_HTTP_REQUESTS, FALSE
                buildConfigField BOOLEAN, TRACING_ENABLED, FALSE
                buildConfigField BOOLEAN, REPORT_CRASHES, TRUE
                buildConfigField BOOLEAN, RESET_DB_ONSTART, FALSE
            }
            debug {
                buildConfigField BOOLEAN, LOG_HTTP_REQUESTS, TRUE
                buildConfigField BOOLEAN, TRACING_ENABLED, FALSE
                buildConfigField BOOLEAN, REPORT_CRASHES, FALSE
                buildConfigField BOOLEAN, RESET_DB_ONSTART, TRUE
            }
        }
    }

}

